<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Admin</title>

    <%- include("admin_template/link_style.ejs") %>
</head>

<body class="hold-transition sidebar-mini">
    <div class="wrapper" id="app">

        <!-- Navbar -->
        <nav class="main-header navbar navbar-expand navbar-white navbar-light">
            <!-- Left navbar links -->
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" data-widget="pushmenu" href="#" role="button"><i class="fas fa-bars"></i></a>
                </li>
            </ul>

            <!-- Right navbar links -->
            <ul class="navbar-nav ml-auto">
                <!-- Navbar Search -->
                <li class="nav-item">
                    <div class="navbar-search-block">
                        <form class="form-inline">
                            <div class="input-group input-group-sm">
                                <input class="form-control form-control-navbar" type="search" placeholder="Search"
                                    aria-label="Search">
                                <div class="input-group-append">
                                    <button class="btn btn-navbar" type="submit">
                                        <i class="fas fa-search"></i>
                                    </button>
                                    <button class="btn btn-navbar" type="button" data-widget="navbar-search">
                                        <i class="fas fa-times"></i>
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </li>
            </ul>
        </nav>
        <!-- /.navbar -->

        <!-- Main Sidebar Container -->
        <aside class="main-sidebar sidebar-dark-primary elevation-4">
            <!-- Brand Logo -->
            <a href="#" class="brand-link">
                <img src="dist/img/AdminLTELogo.png" alt="AdminLTE Logo" class="brand-image img-circle elevation-3"
                    style="opacity: .8">
                <span class="brand-text font-weight-light">E-shop</span>
            </a>

            <!-- Sidebar -->
            <div class="sidebar">
                <!-- Sidebar user panel (optional) -->
                <div class="user-panel mt-3 pb-3 mb-3 d-flex">
                    <div class="image">
                        <img src="dist/img/user2-160x160.jpg" class="img-circle elevation-2" alt="User Image">
                    </div>
                    <div class="info">
                        <a href="#" class="d-block">
                            <%= global.user %>
                        </a>
                    </div>
                </div>
                <!-- Sidebar Menu -->
                <%- include("admin_template/admin_navigation.ejs")%>
                    <!-- /.sidebar-menu -->
            </div>
            <!-- /.sidebar -->
        </aside>

        <!-- Content Wrapper. Contains page content -->
        <div class="content-wrapper">
            <!-- Content Header (Page header) -->
            <div class="content-header">
                <div class="container-fluid">
                    <div class="row mb-2">
                        <div class="col-sm-6">
                            <h1 class="m-0">Condition Page</h1>
                        </div><!-- /.col -->
                        <div class="col-sm-6">
                            <ol class="breadcrumb float-sm-right">
                                <li class="breadcrumb-item"><a href="#">Condition</a></li>
                                <li class="breadcrumb-item active">Conditon Page</li>
                            </ol>
                        </div><!-- /.col -->
                    </div><!-- /.row -->
                </div><!-- /.container-fluid -->
            </div>
            <!-- /.content-header -->

            <!-- Start Form Insert New -->
            <!-- Modal -->
            <div class="modal fade" id="myModal" data-backdrop="static" data-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="staticBackdropLabel" v-if="status == 'add'">New Conditon
                            </h5>
                            <h5 class="modal-title" id="staticBackdropLabel" v-if="status == 'update'">Update Conditon
                                Information</h5>
                        </div>
                        <div class="modal-body" style="padding: 0;">
                            <form method="" action="" enctype="multipart/form-data">
                                <div class="card-body" style="padding: 10px 20px;">
                                    <div class="form-group">
                                        <label for="name" class="form-label">Conditon
                                            <span style="color: red;">*</span></label>
                                        <input type="text" class="form-control" v-model="form.condition" id="name"
                                            name="name">
                                    </div>

                                    <div class="form-group">
                                        <label for="address" class="form-label">Description</label>
                                        <textarea class="form-control" id="exampleFormControlTextarea1" rows="3"
                                            v-model="form.description"></textarea>
                                    </div>
                                    <input type="hidden" id="condition_id" v-model="condition_id">
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-outline-danger" @click="closeModel()">
                                <i class="far fa-times-circle"></i>
                                Close
                            </button>

                            <button type="button" class="btn btn-primary" @click="onSave()" v-if="status == 'add'">
                                <i class="fas fa-save"></i>
                                Save
                            </button>
                            <button type="button" id="save" class="btn btn-success" @click="onUpdate()"
                                v-if="status == 'update'">
                                <i class="fas fa-download"></i>
                                Update
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Insert New  -->

            <!-- Main content -->
            <div class="content">
                <div class="container-fluid">
                    <div class="row" style="justify-content: center;">
                        <div class="col-md-10">
                            <div class="card">
                                <div class="card-header">
                                    <button type="button" class="btn btn-outline-primary" @click="openModel()">
                                        <i class="fas fa-plus-circle"></i>
                                        Add new
                                    </button>

                                </div>
                                <div class="card-body">
                                    <div class="table-responsive" style="height: 450px;overflow-y:scroll;">
                                        <table class="table table-striped border">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>#</th>
                                                    <th>Condition</th>
                                                    <th>Description</th>
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="userTableBody">
                                                <tr v-for="(condition_item, index) in condition_list">
                                                    <td class="text-center">{{ index + 1 }}</td>
                                                    <td class="text-left">{{ condition_item.condition_name }}</td>
                                                    <td class="text-left">{{ condition_item.description }}</td>
                                                    <td>
                                                        <button type="button" class="btn btn-outline-danger mr-2"
                                                            @click="onDelete(condition_item.id)">
                                                            <i class="fas fa-trash-alt"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-outline-warning mr-2"
                                                            @click="onEdit(condition_item)">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /.row -->
                </div>
            </div>
            <!-- /.content -->
        </div>
        <!-- /.content-wrapper -->

        <!-- Main Footer -->
        <footer class="main-footer" style="text-align: center;">
            <span class="footer__copy">&#169; DUONG <span style="color: gold;">NAMFA</span>. All right
                reserve</span>
        </footer>
    </div>

    <!-- ./wrapper -->

    <%- include("admin_template/link_script.ejs") -%>
        <script>
            const { createApp } = Vue;
            createApp({
                created() {
                    this.GetCondition()
                },
                data() {
                    return {
                        condition_list: [],
                        status: 'add',
                        form: {
                            condition: '',
                            description: ''
                        },
                        condition_id: ''
                    };
                },
                methods: {
                    openModel() {
                        $('#myModal').modal('show')
                    },
                    closeModel() {
                        $('#myModal').modal('hide')
                        this.clearCode()
                    },
                    clearCode() {
                        this.form = {
                            condition: '',
                            description: ''
                        },
                            this.condition_id = '',
                            this.status = 'add'
                    },
                    GetCondition() {
                        $.LoadingOverlay("show");
                        fetch('http://localhost:3000/api/list/allcondition')
                            .then(response => {
                                if (!response.ok) {
                                    throw new Error('Network response was not ok');
                                }
                                return response.json();
                            })
                            .then(data => {
                                this.condition_list = data;
                                $.LoadingOverlay("hide");
                            })
                            .catch(error => {
                                console.error('Error fetching data:', error);
                            });
                    },
                    onSave() {
                        if (this.form.condition == null || this.form.condition == '') {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Please enter condition...!",
                            });
                            return
                        }


                        let currect_condition = {
                            name: this.form.condition,
                            description: this.form.description
                        }
                        let vm = this;
                        $.LoadingOverlay("show");
                        axios.post('http://localhost:3000/api/create/condition', currect_condition)
                            .then(function (response) {
                                vm.GetCondition();
                                $.LoadingOverlay("hide");
                                Swal.fire({
                                    icon: "success",
                                    title: "Order Success",
                                    showConfirmButton: false
                                });
                                vm.closeModel();
                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    },
                    onDelete(condition_id) {
                        Swal.fire({
                            title: "Do you want to save the changes?",
                            showDenyButton: true,
                            // showCancelButton: true,
                            confirmButtonText: "Delete",
                            denyButtonText: `cancel`
                        }).then((result) => {
                            if (result.isConfirmed) {
                                let vm = this
                                $.LoadingOverlay("show");
                                let url_api = "http://127.0.0.1:3000/api/delete/condition"
                                // Make a request for a user with a given ID
                                axios.post(url_api, { condition_id: condition_id })
                                    .then(function (response) {
                                        // handle success
                                        vm.GetCondition()
                                        $.LoadingOverlay("hide")
                                    })
                                    .catch(function (error) {
                                        console.log(error);
                                    });
                            } else if (result.isDenied) {
                                //
                            }
                        });

                    },
                    onEdit(condition_item) {
                        this.status = 'update',
                            this.form.condition = condition_item.condition_name,
                            this.form.description = condition_item.description,
                            this.condition_id = condition_item.id,
                            this.openModel()
                    },
                    onUpdate() {
                        if (this.form.condition == null || this.form.condition == '') {
                            Swal.fire({
                                icon: "error",
                                title: "Error",
                                text: "Please enter condition...!",
                            });
                            return
                        }


                        let currect_condition = {
                            id: this.condition_id,
                            name: this.form.condition,
                            description: this.form.description
                        }
                        let vm = this;

                        $.LoadingOverlay("show");
                        axios.post('http://localhost:3000/api/update/condition', currect_condition)
                            .then(function (response) {
                                vm.GetCondition();
                                $.LoadingOverlay("hide");
                                Swal.fire({
                                    icon: "success",
                                    title: "Updated Success",
                                    showConfirmButton: false
                                });
                                vm.closeModel();
                            })
                            .catch(function (error) {
                                console.log(error);
                            });
                    },
                },
            }).mount('#app');
        </script>
</body>

</html>